{
  "name": "PieChart",
  "expression": "  \r\nclass BarChartElement extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n\t\t\r\n\t\t// Using the Chart.js library to draw the charts (https://www.chartjs.org/)\r\n        this.script = document.createElement('script');\r\n        this.script.setAttribute('src', 'https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js');\r\n        this.script.onload = () => this.render();\r\n\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.style.width = '100%';\r\n        this.wrapper.style.height = '300px';\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = '500';\r\n        this.canvas.height = '300';\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.wrapper.appendChild(this.canvas);\r\n        this.appendChild(this.script);\r\n        this.appendChild(this.wrapper);\r\n    }\r\n\r\n\tgetColor(index){\r\n        return [\"rgb(54, 162, 235)\", \r\n                \"rgb(75, 192, 192)\",\r\n                \"rgb(255, 99, 132)\", \r\n                \"rgb(255, 159, 64)\", \r\n                \"rgb(255, 205, 86)\"\r\n                ][index%5];\r\n    }\r\n\t\r\n    render() {\r\n        if (typeof Chart === 'function' && Array.isArray(this.chartData)){\r\n\t\t\t\r\n\t\t\t// This WebComponent works with the following data structure\r\n\t\t\t/*\r\n\t\t\t[\r\n\t\t\t\t{ serievalue: 'Serie 1', datavalue: 3},\r\n\t\t\t\t{ serievalue: 'Serie 2', datavalue: 4},\r\n\t\t\t\t...\r\n\t\t\t]\r\n\t\t\t*/\r\n\t\t\t\r\n            const labels = this.chartData.map(entry => entry.serievalue);\r\n            const data = this.chartData.map(entry => entry.datavalue);\r\n\t\t\t\r\n            const config = {\r\n                type: 'pie',\r\n                data: {\r\n                    datasets: [{\r\n                        data: data,\r\n                        backgroundColor: data.map((entry, index) => this.getColor(index))\r\n                    }],\r\n                    labels: labels\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    legend: { display: false  }\r\n                }\r\n            };\r\n\t\t\t\r\n\t\t\tconst myChart = new Chart(this.canvas, config);\r\n        }\r\n    }\r\n\r\n    set value(newValue) {\r\n        this.chartData = newValue;\r\n        this.render();\r\n    }\r\n\r\n}\r\n\r\ncustomElements.define('omnia-pie-chart', BarChartElement);",
  "description": "OMNIA Web Component\nPie Chart (using chart.js)",
  "customElementName": "omnia-pie-chart"
}