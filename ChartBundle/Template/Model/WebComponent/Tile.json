{
  "name": "Tile",
  "expression": "function getTile() {\r\n    const card = document.createElement('div');\r\n    card.className = 'card';\r\n\r\n    return card;\r\n}\r\n\r\nfunction getTileContent(configuration) {\r\n    const cardBody = document.createElement('div');\r\n    cardBody.className = 'card-body p-3';\r\n\r\n    const row = document.createElement('div');\r\n    row.className = 'row';\r\n\r\n    if (configuration.isLoading === true) {\r\n        const container = document.createElement('div');\r\n        container.appendChild(getLoader(configuration.iconColor));\r\n        container.className = 'col-12 text-center';\r\n\r\n        row.appendChild(container);\r\n        cardBody.appendChild(row);\r\n        return cardBody;\r\n    }\r\n\r\n    if ((configuration.backgroundColor || '') !== '')\r\n        cardBody.style.backgroundColor = configuration.backgroundColor;\r\n\r\n    if ((configuration.textColor || '') !== '')\r\n        cardBody.style.textColor = configuration.textColor;\r\n\r\n    cardBody.onclick = configuration.onClick;\r\n    cardBody.style.cursor = configuration.onClick ? 'pointer' : 'auto';\r\n\r\n    const left = document.createElement('div');\r\n    left.appendChild(getTileMainIcon(configuration.icon, configuration.iconColor));\r\n    left.className = 'col-4';\r\n\r\n    const right = document.createElement('div');\r\n    right.appendChild(getTileMainContent(configuration.title, configuration.value, configuration.textColor));\r\n    right.className = 'col-8';\r\n\r\n    row.appendChild(left);\r\n    row.appendChild(right);\r\n    cardBody.appendChild(row);\r\n\r\n    return cardBody;\r\n}\r\n\r\nfunction getLoader(color) {\r\n    const icon = document.createElement('i');\r\n    icon.className = `fa fa-fw fa-3x fa-spin fa-circle-o-notch`;\r\n    icon.style.color = color || 'black';\r\n\r\n    return icon;\r\n}\r\n\r\nfunction getTileMainIcon(iconValue, color) {\r\n    const icon = document.createElement('i');\r\n    icon.className = `fa fa-fw fa-3x fa-${iconValue}`;\r\n    icon.style.color = color || 'black';\r\n\r\n    return icon;\r\n}\r\n\r\nfunction getTileMainContent(title, value, textColor) {\r\n    const mainContent = document.createElement('div');\r\n    mainContent.className = 'text-right';\r\n\r\n    const titleContainer = document.createElement('p');\r\n    titleContainer.className = 'font-weight-light m-0';\r\n    titleContainer.textContent = title;\r\n\r\n    const valueContainer = document.createElement('p');\r\n    valueContainer.className = 'h4 m-0';\r\n    valueContainer.textContent = value;\r\n\r\n    if ((textColor || '') !== '') {\r\n        titleContainer.style.color = textColor;\r\n        valueContainer.style.color = textColor;\r\n    }\r\n\r\n    mainContent.appendChild(titleContainer);\r\n    mainContent.appendChild(valueContainer);\r\n\r\n    return mainContent;\r\n}\r\n\r\nclass TileElement extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.render = this.render.bind(this);\r\n\r\n        this._configuration = {\r\n            title: '',\r\n            icon: 'file',\r\n            value: '0',\r\n            iconColor: null,\r\n            textColor: null,\r\n            backgroundColor: null,\r\n            onClick: null,\r\n            isLoading: false\r\n        };\r\n\r\n        this._tile = getTile();\r\n\r\n        this.render();\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.appendChild(this._tile);\r\n    }\r\n\r\n    render() {\r\n        this._tile.innerHTML = '';\r\n        this._tile.appendChild(getTileContent(this._configuration));\r\n    }\r\n\r\n    set title(value) {\r\n        this._configuration.title = value;\r\n        this.render();\r\n    }\r\n\r\n    set icon(value) {\r\n        this._configuration.icon = value;\r\n        this.render();\r\n    }\r\n\r\n    set value(value) {\r\n        this._configuration.value = value;\r\n        this.render();\r\n    }\r\n\r\n    set iconColor(value) {\r\n        this._configuration.iconColor = value;\r\n        this.render();\r\n    }\r\n\r\n    set textColor(value) {\r\n        this._configuration.textColor = value;\r\n        this.render();\r\n    }\r\n\r\n    set backgroundColor(value) {\r\n        this._configuration.backgroundColor = value;\r\n        this.render();\r\n    }\r\n\r\n    set onClick(action) {\r\n        this._configuration.onClick = action;\r\n        this.render();\r\n    }\r\n\r\n    set isLoading(value) {\r\n        this._configuration.isLoading = value === true;\r\n        this.render();\r\n    }\r\n}\r\n\r\ncustomElements.define('omnia-tile', TileElement);",
  "description": "OMNIA Web Component: Tile",
  "customElementName": "omnia-tile"
}